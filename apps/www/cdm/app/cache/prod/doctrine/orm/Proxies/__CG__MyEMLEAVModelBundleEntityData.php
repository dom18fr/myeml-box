<?php

namespace Proxies\__CG__\MyEML\EAVModelBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Data extends \MyEML\EAVModelBundle\Entity\Data implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }

    /**
     * {@inheritDoc}
     * @param string $name
     */
    public function __get($name)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__get', [$name]);

        return parent::__get($name);
    }

    /**
     * {@inheritDoc}
     * @param string $name
     * @param mixed  $value
     */
    public function __set($name, $value)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__set', [$name, $value]);

        return parent::__set($name, $value);
    }

    /**
     * {@inheritDoc}
     * @param  string $name
     * @return boolean
     */
    public function __isset($name)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__isset', [$name]);

        return parent::__isset($name);

    }

    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'createdBy', 'updatedBy', 'id', 'parent', 'children', 'values', 'refererValues', 'createdAt', 'updatedAt', 'family', 'currentContext', 'valuesByAttributes'];
        }

        return ['__isInitialized__', 'createdBy', 'updatedBy', 'id', 'parent', 'children', 'values', 'refererValues', 'createdAt', 'updatedAt', 'family', 'currentContext', 'valuesByAttributes'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Data $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * {@inheritDoc}
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);

        parent::__clone();
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getCreatedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedBy', []);

        return parent::getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedBy(\CleverAge\EAVManager\UserBundle\Entity\User $createdBy = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedBy', [$createdBy]);

        return parent::setCreatedBy($createdBy);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedBy', []);

        return parent::getUpdatedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedBy(\CleverAge\EAVManager\UserBundle\Entity\User $updatedBy = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedBy', [$updatedBy]);

        return parent::setUpdatedBy($updatedBy);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdentifier()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdentifier', []);

        return parent::getIdentifier();
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt($createdAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$createdAt]);

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt($updatedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updatedAt]);

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getParent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParent', []);

        return parent::getParent();
    }

    /**
     * {@inheritDoc}
     */
    public function setParent(\Sidus\EAVModelBundle\Entity\DataInterface $parent = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setParent', [$parent]);

        return parent::setParent($parent);
    }

    /**
     * {@inheritDoc}
     */
    public function addValueData(\Sidus\EAVModelBundle\Model\AttributeInterface $attribute, $valueData, array $context = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addValueData', [$attribute, $valueData, $context]);

        return parent::addValueData($attribute, $valueData, $context);
    }

    /**
     * {@inheritDoc}
     */
    public function removeValueData(\Sidus\EAVModelBundle\Model\AttributeInterface $attribute, $valueData, array $context = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeValueData', [$attribute, $valueData, $context]);

        return parent::removeValueData($attribute, $valueData, $context);
    }

    /**
     * {@inheritDoc}
     */
    public function getLabel(array $context = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLabel', [$context]);

        return parent::getLabel($context);
    }

    /**
     * {@inheritDoc}
     */
    public function getValueData(\Sidus\EAVModelBundle\Model\AttributeInterface $attribute, array $context = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValueData', [$attribute, $context]);

        return parent::getValueData($attribute, $context);
    }

    /**
     * {@inheritDoc}
     */
    public function getValuesData(\Sidus\EAVModelBundle\Model\AttributeInterface $attribute, array $context = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValuesData', [$attribute, $context]);

        return parent::getValuesData($attribute, $context);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function __call($methodName, $arguments)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__call', [$methodName, $arguments]);

        return parent::__call($methodName, $arguments);
    }

    /**
     * {@inheritDoc}
     */
    public function get($attributeCode, array $context = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'get', [$attributeCode, $context]);

        return parent::get($attributeCode, $context);
    }

    /**
     * {@inheritDoc}
     */
    public function set($attributeCode, $value, array $context = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'set', [$attributeCode, $value, $context]);

        return parent::set($attributeCode, $value, $context);
    }

    /**
     * {@inheritDoc}
     */
    public function add($attributeCode, $value, array $context = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'add', [$attributeCode, $value, $context]);

        return parent::add($attributeCode, $value, $context);
    }

    /**
     * {@inheritDoc}
     */
    public function remove($attributeCode, $value, array $context = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'remove', [$attributeCode, $value, $context]);

        return parent::remove($attributeCode, $value, $context);
    }

    /**
     * {@inheritDoc}
     */
    public function getValue(\Sidus\EAVModelBundle\Model\AttributeInterface $attribute, array $context = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValue', [$attribute, $context]);

        return parent::getValue($attribute, $context);
    }

    /**
     * {@inheritDoc}
     */
    public function getValues(\Sidus\EAVModelBundle\Model\AttributeInterface $attribute = NULL, array $context = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValues', [$attribute, $context]);

        return parent::getValues($attribute, $context);
    }

    /**
     * {@inheritDoc}
     */
    public function getRefererValues(\Sidus\EAVModelBundle\Model\FamilyInterface $family = NULL, \Sidus\EAVModelBundle\Model\AttributeInterface $attribute = NULL, array $context = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRefererValues', [$family, $attribute, $context]);

        return parent::getRefererValues($family, $attribute, $context);
    }

    /**
     * {@inheritDoc}
     */
    public function getRefererDatas(\Sidus\EAVModelBundle\Model\FamilyInterface $family = NULL, \Sidus\EAVModelBundle\Model\AttributeInterface $attribute = NULL, array $context = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRefererDatas', [$family, $attribute, $context]);

        return parent::getRefererDatas($family, $attribute, $context);
    }

    /**
     * {@inheritDoc}
     */
    public function getCurrentContext()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCurrentContext', []);

        return parent::getCurrentContext();
    }

    /**
     * {@inheritDoc}
     */
    public function setCurrentContext(array $currentContext = array (
))
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCurrentContext', [$currentContext]);

        return parent::setCurrentContext($currentContext);
    }

    /**
     * {@inheritDoc}
     */
    public function getFamily()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFamily', []);

        return parent::getFamily();
    }

    /**
     * {@inheritDoc}
     */
    public function getFamilyCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFamilyCode', []);

        return parent::getFamilyCode();
    }

    /**
     * {@inheritDoc}
     */
    public function createValue(\Sidus\EAVModelBundle\Model\AttributeInterface $attribute, array $context = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'createValue', [$attribute, $context]);

        return parent::createValue($attribute, $context);
    }

    /**
     * {@inheritDoc}
     */
    public function setValuesData(\Sidus\EAVModelBundle\Model\AttributeInterface $attribute, $dataValues, array $context = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setValuesData', [$attribute, $dataValues, $context]);

        return parent::setValuesData($attribute, $dataValues, $context);
    }

    /**
     * {@inheritDoc}
     */
    public function emptyValues(\Sidus\EAVModelBundle\Model\AttributeInterface $attribute = NULL, array $context = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'emptyValues', [$attribute, $context]);

        return parent::emptyValues($attribute, $context);
    }

    /**
     * {@inheritDoc}
     */
    public function removeValue(\Sidus\EAVModelBundle\Entity\ValueInterface $value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeValue', [$value]);

        return parent::removeValue($value);
    }

    /**
     * {@inheritDoc}
     */
    public function addValue(\Sidus\EAVModelBundle\Entity\ValueInterface $value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addValue', [$value]);

        return parent::addValue($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setValueData(\Sidus\EAVModelBundle\Model\AttributeInterface $attribute, $dataValue, array $context = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setValueData', [$attribute, $dataValue, $context]);

        return parent::setValueData($attribute, $dataValue, $context);
    }

    /**
     * {@inheritDoc}
     */
    public function isEmpty(\Sidus\EAVModelBundle\Model\AttributeInterface $attribute, array $context = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isEmpty', [$attribute, $context]);

        return parent::isEmpty($attribute, $context);
    }

    /**
     * {@inheritDoc}
     */
    public function __debugInfo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__debugInfo', []);

        return parent::__debugInfo();
    }

}
