<?php

namespace Proxies\__CG__\MyEML\EAVModelBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Value extends \MyEML\EAVModelBundle\Entity\Value implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'campus', 'program', 'locale', 'profile', 'imageValue', 'documentValue', 'id', 'data', 'dataValue', 'constrainedDataValue', 'attributeCode', 'familyCode', 'position', 'boolValue', 'integerValue', 'decimalValue', 'dateValue', 'datetimeValue', 'stringValue', 'textValue'];
        }

        return ['__isInitialized__', 'campus', 'program', 'locale', 'profile', 'imageValue', 'documentValue', 'id', 'data', 'dataValue', 'constrainedDataValue', 'attributeCode', 'familyCode', 'position', 'boolValue', 'integerValue', 'decimalValue', 'dateValue', 'datetimeValue', 'stringValue', 'textValue'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Value $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * {@inheritDoc}
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);

        parent::__clone();
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getContextKeys()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContextKeys', []);

        return parent::getContextKeys();
    }

    /**
     * {@inheritDoc}
     */
    public function getCampus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCampus', []);

        return parent::getCampus();
    }

    /**
     * {@inheritDoc}
     */
    public function setCampus($campus)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCampus', [$campus]);

        return parent::setCampus($campus);
    }

    /**
     * {@inheritDoc}
     */
    public function getProgram()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProgram', []);

        return parent::getProgram();
    }

    /**
     * {@inheritDoc}
     */
    public function setProgram($program)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProgram', [$program]);

        return parent::setProgram($program);
    }

    /**
     * {@inheritDoc}
     */
    public function getLocale()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLocale', []);

        return parent::getLocale();
    }

    /**
     * {@inheritDoc}
     */
    public function setLocale($locale)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLocale', [$locale]);

        return parent::setLocale($locale);
    }

    /**
     * {@inheritDoc}
     */
    public function getProfile()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProfile', []);

        return parent::getProfile();
    }

    /**
     * {@inheritDoc}
     */
    public function setProfile($profile)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProfile', [$profile]);

        return parent::setProfile($profile);
    }

    /**
     * {@inheritDoc}
     */
    public function getImageValue()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImageValue', []);

        return parent::getImageValue();
    }

    /**
     * {@inheritDoc}
     */
    public function setImageValue(\CleverAge\EAVManager\AssetBundle\Entity\Image $imageValue = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImageValue', [$imageValue]);

        return parent::setImageValue($imageValue);
    }

    /**
     * {@inheritDoc}
     */
    public function getDocumentValue()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDocumentValue', []);

        return parent::getDocumentValue();
    }

    /**
     * {@inheritDoc}
     */
    public function setDocumentValue(\CleverAge\EAVManager\AssetBundle\Entity\Document $documentValue = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDocumentValue', [$documentValue]);

        return parent::setDocumentValue($documentValue);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getIdentifier()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdentifier', []);

        return parent::getIdentifier();
    }

    /**
     * {@inheritDoc}
     */
    public function getAttributeCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAttributeCode', []);

        return parent::getAttributeCode();
    }

    /**
     * {@inheritDoc}
     */
    public function getFamilyCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFamilyCode', []);

        return parent::getFamilyCode();
    }

    /**
     * {@inheritDoc}
     */
    public function getAttribute()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAttribute', []);

        return parent::getAttribute();
    }

    /**
     * {@inheritDoc}
     */
    public function getBoolValue()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBoolValue', []);

        return parent::getBoolValue();
    }

    /**
     * {@inheritDoc}
     */
    public function setBoolValue($boolValue)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBoolValue', [$boolValue]);

        return parent::setBoolValue($boolValue);
    }

    /**
     * {@inheritDoc}
     */
    public function getIntegerValue()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIntegerValue', []);

        return parent::getIntegerValue();
    }

    /**
     * {@inheritDoc}
     */
    public function setIntegerValue($integerValue)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIntegerValue', [$integerValue]);

        return parent::setIntegerValue($integerValue);
    }

    /**
     * {@inheritDoc}
     */
    public function getDecimalValue()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDecimalValue', []);

        return parent::getDecimalValue();
    }

    /**
     * {@inheritDoc}
     */
    public function setDecimalValue($decimalValue)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDecimalValue', [$decimalValue]);

        return parent::setDecimalValue($decimalValue);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateValue()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateValue', []);

        return parent::getDateValue();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateValue($dateValue)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateValue', [$dateValue]);

        return parent::setDateValue($dateValue);
    }

    /**
     * {@inheritDoc}
     */
    public function getDatetimeValue()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDatetimeValue', []);

        return parent::getDatetimeValue();
    }

    /**
     * {@inheritDoc}
     */
    public function setDatetimeValue($datetimeValue)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDatetimeValue', [$datetimeValue]);

        return parent::setDatetimeValue($datetimeValue);
    }

    /**
     * {@inheritDoc}
     */
    public function getStringValue()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStringValue', []);

        return parent::getStringValue();
    }

    /**
     * {@inheritDoc}
     */
    public function setStringValue($stringValue)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStringValue', [$stringValue]);

        return parent::setStringValue($stringValue);
    }

    /**
     * {@inheritDoc}
     */
    public function getTextValue()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTextValue', []);

        return parent::getTextValue();
    }

    /**
     * {@inheritDoc}
     */
    public function setTextValue($textValue)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTextValue', [$textValue]);

        return parent::setTextValue($textValue);
    }

    /**
     * {@inheritDoc}
     */
    public function getDataValue()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDataValue', []);

        return parent::getDataValue();
    }

    /**
     * {@inheritDoc}
     */
    public function setDataValue(\Sidus\EAVModelBundle\Entity\DataInterface $dataValue = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDataValue', [$dataValue]);

        return parent::setDataValue($dataValue);
    }

    /**
     * {@inheritDoc}
     */
    public function getConstrainedDataValue()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConstrainedDataValue', []);

        return parent::getConstrainedDataValue();
    }

    /**
     * {@inheritDoc}
     */
    public function setConstrainedDataValue(\Sidus\EAVModelBundle\Entity\DataInterface $constrainedDataValue = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConstrainedDataValue', [$constrainedDataValue]);

        return parent::setConstrainedDataValue($constrainedDataValue);
    }

    /**
     * {@inheritDoc}
     */
    public function getData()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getData', []);

        return parent::getData();
    }

    /**
     * {@inheritDoc}
     */
    public function setData(\Sidus\EAVModelBundle\Entity\DataInterface $data = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setData', [$data]);

        return parent::setData($data);
    }

    /**
     * {@inheritDoc}
     */
    public function getPosition()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPosition', []);

        return parent::getPosition();
    }

    /**
     * {@inheritDoc}
     */
    public function setPosition($position)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPosition', [$position]);

        return parent::setPosition($position);
    }

    /**
     * {@inheritDoc}
     */
    public function getContext()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContext', []);

        return parent::getContext();
    }

    /**
     * {@inheritDoc}
     */
    public function getContextValue($key)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContextValue', [$key]);

        return parent::getContextValue($key);
    }

    /**
     * {@inheritDoc}
     */
    public function setContext(array $context)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContext', [$context]);

        return parent::setContext($context);
    }

    /**
     * {@inheritDoc}
     */
    public function clearContext()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'clearContext', []);

        return parent::clearContext();
    }

    /**
     * {@inheritDoc}
     */
    public function setContextValue($key, $value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContextValue', [$key, $value]);

        return parent::setContextValue($key, $value);
    }

}
